<?php
class A {
    public function foo() {
        static $x = 0;
        echo ++$x;
    }
}
$a1 = new A(); // Создаем екземпляр класса А
$a2 = new A(); // Создаем второй екземпляр класса А
$a1->foo(); // Будет выполнена операция инкремента и выведено значение 1
$a2->foo(); // Так как это экземпляр класса А static переменная x принадлежит классу А и хранит значение 1, будет выполнена операция инкремента и выведено значение 2
$a1->foo(); // Принцип тот же что и у первого обращения, x хранит значение 2, будет выполнена операция инкремента и выведено значение 3
$a2->foo(); // x хранит 3, будет выполнена операция инкремента и выведено значение 4

class A {
    public function foo() {
        static $x = 0;
        echo ++$x;
    }
}
class B extends A {
}
$a1 = new A(); // Создаем екземпляр класса А
$b1 = new B(); // Создаем екземпляр класса B
$a1->foo(); // Инкрементируем переменную в классе A, получаем 1
$b1->foo(); // Инкрементируем переменную в классе B, получаем 1
$a1->foo(); // Инкрементируем переменную в классе A, получаем 2
$b1->foo(); // Инкрементируем переменную в классе B, получаем 2

class A {
    public function foo() {
        static $x = 0;
        echo ++$x;
    }
}
class B extends A {
}
$a1 = new A;// В случае отсутствия аргументов в конструктор класса, круглые скобки после названия класса можно опустить.
$b1 = new B;
$a1->foo();
$b1->foo();
$a1->foo();
$b1->foo();